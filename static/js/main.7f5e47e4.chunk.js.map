{"version":3,"sources":["Tree.js","ItemsCollection.js","CardsCollection.js","Search.js","TagSearch.js","CategorySearch.js","FilterMenu.js","App.js","serviceWorker.js","index.js"],"names":["React","Component","Image","require","Carousel","ItemsCollection","MyCarousel","props","showArrows","onChange","onClickItem","onClickThumb","showStatus","img","map","src","CardsCollection","useState","setOpen","Card","Group","centered","data","element","i","visibleProjects","includes","className","Modal","onClose","onOpen","trigger","images","path","img_add_prefix","as","Header","title","Content","image","Actions","Button","onClick","style","width","float","Checkbox","onChangeProject","fontSize","fontWeight","Search","Dropdown","placeholder","fluid","clearable","search","selection","options","this","tags","filterChangedName","TagSearch","multiple","CategorySearch","FilterMenu","e","value","console","log","Segment","Grid","container","columns","stackable","Column","basic","formSearchFromArray","categories","projectNames","positive","icon","Icon","name","marginTop","color","h1","paddingTop","paddingBottom","App","state","year","language","visibleTags","checkedProjects","filerChosenName","filterChosenCategories","filterChosenTags","filterChosenYears","handleCheckTag","bind","newExpanded","a","push","getProjectNames","newState","expandedTags","setState","ans","d","list","key","text","updatedCheckedTags","targetNode","checkedTags","content","textAlign","Container","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.7f5e47e4.chunk.js","sourcesContent":["import React from 'react';\nimport CheckboxTree from 'react-checkbox-tree';\nimport 'react-checkbox-tree/lib/react-checkbox-tree.css';\nimport './my-style.css';\n\n\nclass Tree extends React.Component\n{\n    state = {\n        //checked: [],\n        //expanded: [],\n    };\n\n    \n\n    render() {\n        return (\n            <CheckboxTree\n                nodes={this.props.nodes}\n                //already set (see below)  checked={this.state.checked}\n                //expanded={this.state.expanded}\n                //onCheck={checked => this.setState({ checked })}\n                onExpand={expanded => this.setState({ expanded })}\n                showNodeIcon={this.props.showNodeIcon}\n                checkOnClick={true}\n                //onClick={() => {}}\n                onCheck={this.props.handleCheckTag}\n                checked={this.props.checked}\n                expanded={this.props.expanded}\n                \n                //onClick={(flag) => {this.props.handleCheckTag([flag])}}\n            />\n        );\n    }\n}\n\nexport default Tree;","import React from \"react\";\nimport {\n  Button,\n  Icon,\n  Image,\n  Item,\n  Label,\n  Modal,\n  Grid,\n  Checkbox,\n} from \"semantic-ui-react\";\nimport { waitForElementToBeRemoved } from \"@testing-library/react\";\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\"; // requires a loader\n\nconst paragraph = <Image src=\"/images/wireframe/short-paragraph.png\" />;\n\nvar Carousel = require(\"react-responsive-carousel\").Carousel;\n\nfunction MyCarousel(props) {\n  return (\n    <Carousel\n      showArrows={true}\n      onChange={() => {}}\n      onClickItem={() => {}}\n      onClickThumb={() => {}}\n      showStatus={false}\n    >\n      {props.img.map((img) => {\n        return (\n          <div>\n            <img src={img} />\n          </div>\n        );\n      })}\n    </Carousel>\n  );\n}\n\nfunction ItemsCollection(props) {\n  const [open, setOpen] = React.useState(false);\n\n  return (\n    <div>\n    \n\n      <Grid>\n        <Grid.Row>\n          <Grid.Column>1</Grid.Column>\n          <Grid.Column>2</Grid.Column>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Column>3</Grid.Column>\n          <Grid.Column>2</Grid.Column>\n        </Grid.Row>\n      </Grid>\n\n      <Item.Group divided>\n        {props.data.map((element, i) => { \n          if (props.visibleProjects.includes(i))\n          return (\n              \n              <Item>\n                <Checkbox className='checkbox-project' onChange={() => props.onChangeProject(i)}/>\n                <Modal\n                  onClose={() => setOpen(false)}\n                  onOpen={() => setOpen(true)}\n                  //open={open}\n                  trigger={\n                    <Item.Image\n                      src={\n                        element.images.map((path) =>\n                        props.img_add_prefix(path)\n                        )[0]\n                      }\n                      as=\"a\"\n                    />\n                  }\n                >\n                  <Modal.Header>{element.title}</Modal.Header>\n                  <Modal.Content image>\n                    <MyCarousel\n                      img={element.images.map((path) =>\n                        props.img_add_prefix(path)\n                      )}\n                    />\n                  </Modal.Content>\n                  <Modal.Actions>\n                    <Button onClick={() => setOpen(false)}>Закрыть</Button>\n                  </Modal.Actions>\n                </Modal>\n\n                <Item.Content>\n                  <Item.Header>{element.title}</Item.Header>\n                  {/* <Item.Meta>\n                    <span>{element.year}</span>\n                  </Item.Meta> */}\n                  <Item.Description>{element.desc2}</Item.Description>\n\n                  {/* <Item.Extra>\n                    {element.tags.map((tag) => {\n                      return <Label>{tag}</Label>;\n                    })}\n                  </Item.Extra> */}\n                </Item.Content>\n                \n              </Item>\n           \n          );\n        })}\n      </Item.Group>\n      \n    </div>\n  );\n}\n\nexport default ItemsCollection;\n","import React from \"react\";\nimport {\n  Button,\n  Icon,\n  Image,\n  Card,\n  Label,\n  Modal,\n  Grid,\n  Checkbox,\n} from \"semantic-ui-react\";\nimport { waitForElementToBeRemoved } from \"@testing-library/react\";\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\"; // requires a loader\n\nconst paragraph = <Image src=\"/images/wireframe/short-paragraph.png\" />;\n\nvar Carousel = require(\"react-responsive-carousel\").Carousel;\n\nfunction MyCarousel(props) {\n  return (\n    <Carousel\n      showArrows={true}\n      onChange={() => {}}\n      onClickItem={() => {}}\n      onClickThumb={() => {}}\n      showStatus={false}\n    >\n      {props.img.map((img) => {\n        return (\n          <div>\n            <img src={img} />\n          </div>\n        );\n      })}\n    </Carousel>\n  );\n}\n\nfunction CardsCollection(props) {\n  const [open, setOpen] = React.useState(false);\n\n  return (\n    <div>\n      <Card.Group centered>\n        {props.data.map((element, i) => {\n          if (props.visibleProjects.includes(i))\n            return (\n              <Card className=\"cardd\">\n                <Modal\n                  onClose={() => setOpen(false)}\n                  onOpen={() => setOpen(true)}\n                  //open={open}\n                  trigger={\n                    <Image\n                      src={\n                         // './img/sample.jpg'\n                         element.images.map((path) =>\n                           props.img_add_prefix(path)\n                         )[0]\n                      }\n                      //size='tiny'\n\n                      //floated='right'\n                      as=\"a\"\n                    />\n                  }\n                >\n                  <Modal.Header>{element.title}</Modal.Header>\n                  <Modal.Content image>\n                    <MyCarousel\n                      img={element.images.map((path) =>\n                        props.img_add_prefix(path)\n                      )}\n                    />\n                  </Modal.Content>\n                  <Modal.Actions>\n                    <Button onClick={() => setOpen(false)}>Закрыть</Button>\n                  </Modal.Actions>\n                </Modal>\n                <Card.Content>\n                  {[\"a\"].map(() => {\n                    return (\n                      <div>\n                        <div style= {{width: \"17%\", float:\"left\"}}>\n                          <Checkbox onChange={() => props.onChangeProject(i)} />\n                        </div>\n\n                        <div style= {{width: \"83%\", float:\"right\"}}>\n                          <Card.Header\n                            style={{ fontSize: \"13px\", fontWeight: \"normal\" }}\n                          >\n                            {element.title}\n                          </Card.Header>\n                        </div>\n                      </div>\n                    );\n                  })}\n                </Card.Content>\n              </Card>\n            );\n        })}\n      </Card.Group>\n      сделать, чтоыб кликать можно было не только прямо по чекбоксу\n    </div>\n  );\n}\n\nexport default CardsCollection;\n","import React from 'react';\nimport { Dropdown } from 'semantic-ui-react'\n\nclass Search extends React.Component\n{\n    render()\n    {\n        return (\n        <div>\n            <Dropdown\n                placeholder='По названию проекта'\n                fluid\n                //multiple\n                clearable\n                search\n                selection\n                options={this.props.tags}\n                onChange={this.props.filterChangedName}\n            />\n        </div>\n        )\n    }\n}\n\nexport default Search","import React from 'react';\nimport { Dropdown } from 'semantic-ui-react'\n\nclass TagSearch extends React.Component\n{\n    render()\n    {\n        return (\n        <div>\n            <Dropdown\n                placeholder='Теги'\n                fluid\n                multiple\n                clearable\n                search\n                selection\n                options={this.props.tags}\n            />\n        </div>\n        )\n    }\n}\n\nexport default TagSearch","import React from 'react';\nimport { Dropdown } from 'semantic-ui-react'\n\nclass CategorySearch extends React.Component\n{\n    render()\n    {\n        return (\n        <div>\n            <Dropdown\n                placeholder='Категория'\n                fluid\n                multiple\n                //clearable их и так можно чистить\n                search\n                selection\n                options={this.props.tags}\n            />\n        </div>\n        )\n    }\n}\n\nexport default CategorySearch","import React from \"react\";\nimport Search from \"./Search.js\";\nimport TagSearch from \"./TagSearch.js\";\n\nimport {\n  Button,\n  Container,\n  Grid,\n  Header,\n  Icon,\n  Image,\n  Item,\n  Label,\n  Input,\n  Menu,\n  Segment,\n  Step,\n  Table,\n  Dropdown,\n  Checkbox,\n} from \"semantic-ui-react\";\nimport CategorySearch from \"./CategorySearch.js\";\n\nclass FilterMenu extends React.Component {\n  filterChangedName(e, value) {\n    console.log(\"filterchangedname: \" + value.value);\n  }\n\n  render() {\n    return (\n      <Segment>\n        <Grid container columns={4} stackable>\n          <Grid.Column>\n            <Segment basic>\n              <CategorySearch\n                tags={this.props.formSearchFromArray(this.props.categories)}\n              />\n            </Segment>\n          </Grid.Column>\n\n          <Grid.Column>\n            <Segment basic>\n              <TagSearch\n                tags={this.props.formSearchFromArray(this.props.tags)}\n              />\n            </Segment>\n          </Grid.Column>\n\n          <Grid.Column>\n            <Segment basic>\n              <Search //by project name\n                tags={this.props.formSearchFromArray(this.props.projectNames)}\n                filterChangedName={this.filterChangedName}\n              />\n              {/* <Input\n                placeholder=\"2001-2020\"\n                //style={{width: \"83%\", float: \"right\"}}\n\n                //style={{ width: \"30%\", paddingLeft: \"8px\" }}\n              /> */}\n              {/* по \n              <Input\n                style={{ width: \"30%\" }}\n              /> */}\n            </Segment>\n          </Grid.Column>\n          <Grid.Column>\n            <Segment basic>\n              <Button fluid positive icon>\n                <Icon name='search' /> &nbsp; Применить фильтры\n              </Button>\n            </Segment>\n          </Grid.Column>\n        </Grid>\n\n        <Grid container columns={4} stackable style={{ marginTop: \"-40px\" }}>\n          <Grid.Column>\n            <Segment basic>\n              <Button fluid>Deselect all</Button>\n            </Segment>\n          </Grid.Column>\n          <Grid.Column>\n            <Segment basic>\n              <Button fluid>Сбросить фильтры</Button>\n            </Segment>\n          </Grid.Column>\n          <Grid.Column>\n            <Segment basic>\n              <Button fluid>Добавить в портфолио</Button>\n            </Segment>\n          </Grid.Column>\n          <Grid.Column>\n            <Segment basic>\n              <Button color='orange' fluid  icon > \n                Продолжить &nbsp;\n                <Icon name=\"right arrow\" />\n              </Button>\n            </Segment>\n          </Grid.Column>\n        </Grid>\n      </Segment>\n    );\n  }\n}\n\nexport default FilterMenu;\n","import React from \"react\";\nimport Tree from \"./Tree.js\";\n//import Checkbox from './MyCheckbox.js'\n//import List from './List.js'\nimport ItemsCollection from \"./ItemsCollection.js\";\nimport CardsCollection from \"./CardsCollection.js\";\n\nimport FilterMenu from \"./FilterMenu.js\";\n\nimport {\n  Button,\n  Container,\n  Grid,\n  Header,\n  Icon,\n  Image,\n  Item,\n  Label,\n  Menu,\n  Segment,\n  Step,\n  Table,\n} from \"semantic-ui-react\";\n\nconst style = {\n  h1: {\n    paddingTop: \"1em\",\n    paddingBottom: \"0.5em\",\n  },\n};\n\nclass App extends React.Component {\n  img_add_prefix(path) {\n    return \"./img/\" + path;\n  }\n  constructor(props) {\n    super(props);\n    this.state = {\n      // tags: [\n      //   {\n      //     value: \"1\",\n      //     label: \"Упаковка\",\n      //     children: [\n      //       {\n      //         value: \"1.1\",\n      //         label: \"Соки\",\n      //       },\n\n      //       {\n      //         value: \"1.2\",\n      //         label: \"Минералка\",\n      //       },\n\n      //       {\n      //         value: \"1.3\",\n      //         label: \"Крупы\",\n      //       },\n\n      //       {\n      //         value: \"1.4\",\n      //         label: \"Дойпак\",\n      //       },\n\n      //       {\n      //         value: \"1.5\",\n      //         label: \"Трей\",\n      //       },\n\n      //       {\n      //         value: \"1.6\",\n      //         label: \"Пауч\",\n      //       },\n      //     ],\n      //   },\n      //   {\n      //     value: \"2\",\n      //     label: \"Корпоративный брендинг\",\n      //     children: [\n      //       {\n      //         value: \"2.1\",\n      //         label: \"Нефть/газ\",\n      //       },\n\n      //       {\n      //         value: \"2.2\",\n      //         label: \"Государство\",\n      //       },\n\n      //       {\n      //         value: \"2.3\",\n      //         label: \"Спорт\",\n      //       },\n\n      //       {\n      //         value: \"2.4\",\n      //         label: \"Искусство\",\n      //       },\n      //     ],\n      //   },\n      //   {\n      //     value: \"3\",\n      //     label: \"Третья категория тегов\",\n      //     children: [\n      //       {\n      //         value: \"3.1\",\n      //         label: \"И\",\n      //       },\n      //       {\n      //         value: \"3.2\",\n      //         label: \"её\",\n      //       },\n      //       {\n      //         value: \"3.3\",\n      //         label: \"теги\",\n      //       },\n      //     ],\n      //   },\n      // ],\n\n      tags: [\n        [\"1.1\", \"1.2\"],\n        [\"2.1\", \"2.2\", \"2.3\", \"2.4\"],\n      ],\n\n      data: [\n        {\n          images: [\n            \"ALRUD1.jpg\",\n            \"ALRUD2.jpg\",\n            \"ALRUD3.jpg\",\n            \"ALRUD4.jpg\",\n            \"ALRUD5.jpg\",\n          ],\n          title: \"Alrud\",\n          year: 2019,\n          tags: [\"упаковка\", \"фирменный стиль\", \"модно\"],\n        },\n\n        {\n          images: [\n            \"BAKERTON1.jpg\",\n            \"BAKERTON2.jpg\",\n            \"BAKERTON3.jpg\",\n            \"BAKERTON4.jpg\",\n            \"BAKERTON5.jpg\",\n          ],\n          title: \"Bakerton\",\n          year: 2021,\n          tags: [\"упаковка\", \"фирменный стиль\", \"пончики\"],\n        },\n\n        {\n          images: [\n            \"KFC_BATTLE1.jpg\",\n            \"KFC_BATTLE2.jpg\",\n            \"KFC_BATTLE3.jpg\",\n            \"KFC_BATTLE4.jpg\",\n            \"KFC_BATTLE5.jpg\",\n          ],\n          title: \"KFC BATTLE\",\n          year: 2021,\n          tags: [\"мероприятие\", \"ярко\", \"реклама\"],\n        },\n\n        {\n          images: [\n            \"KIDZANIA1.jpg\",\n            \"KIDZANIA2.jpg\",\n            \"KIDZANIA3.jpg\",\n            \"KIDZANIA4.jpg\",\n            \"KIDZANIA5.jpg\",\n          ],\n          title: \"Кидзания\",\n          year: 1999,\n          tags: [\"для детей\", \"плакаты\", \"модно\"],\n        },\n\n        {\n          images: [\"NEMOLOKO1.jpg\", \"NEMOLOKO2.jpg\"],\n          title: \"NEMOLOKO\",\n          year: 2016,\n          tags: [\"фирменный стиль\", \"молоко\", \"еда\", \"модно\"],\n        },\n\n        {\n          images: [\n            \"NORNICKEL_ANNUAL_20191.jpg\",\n            \"NORNICKEL_ANNUAL_20192.jpg\",\n            \"NORNICKEL_ANNUAL_20193.jpg\",\n            \"NORNICKEL_ANNUAL_20194.jpg\",\n            \"NORNICKEL_ANNUAL_20195.jpg\",\n          ],\n          title: \"NORNICKEL ANNUAL\",\n          year: 2019,\n          language: \"eng\",\n          tags: [\"фирменный стиль\", \"брошюры\"],\n        },\n\n        {\n          images: [\"OCHAKOVO_LAP_BEER1.jpg\", \"OCHAKOVO_LAP_BEER2.jpg\"],\n          title: \"OCHAKOVO LAP BEER\",\n          year: 2023,\n          tags: [\"фирменный стиль\", \"упаковка\", \"пиво\"],\n        },\n\n        {\n          images: [\"RICH_HORECA1.jpg\", \"RICH_HORECA2.jpg\"],\n          title: \"RICH HORECA\",\n          year: 2013,\n          tags: [\"фирменный стиль\", \"упаковка\", \"соки\", \"еда\"],\n        },\n\n        {\n          images: [\n            \"SADI_PRIDONYA_BABY1.jpg\",\n            \"SADI_PRIDONYA_BABY2.jpg\",\n            \"SADI_PRIDONYA_BABY3.jpg\",\n            \"SADI_PRIDONYA_BABY4.jpg\",\n            \"SADI_PRIDONYA_BABY5.jpg\",\n          ],\n          title: \"Сады придонья (детская линейка)\",\n          year: 2019,\n          tags: [\"еда\", \"фирменный стиль\", \"для детей\"],\n        },\n\n        {\n          images: [\n            \"SAVUSHKIN_APETI1.jpg\",\n            \"SAVUSHKIN_APETI2.jpg\",\n            \"SAVUSHKIN_APETI3.jpg\",\n          ],\n          title: \"Савушкин Апети\",\n          year: 2018,\n          tags: [\"фирменный стиль\", \"упаковка\", \"еда\", \"модно\"],\n        },\n\n        {\n          images: [\"SP_Mors_01.jpg\", \"SP_Mors_02.jpg\"],\n          title: \"Сады придонья. Морс\",\n          year: 2016,\n          tags: [\"морс\", \"упаковка\", \"еда\"],\n        },\n\n        {\n          images: [\n            \"STADA_100let1.jpg\",\n            \"STADA_100let2.jpg\",\n            \"STADA_100let3.jpg\",\n            \"STADA_100let4.jpg\",\n            \"STADA_100let5.jpg\",\n          ],\n          title: \"STADA_100let\",\n          year: 2020,\n          tags: [\"фирменный стиль\"],\n        },\n\n        {\n          images: [\"TIMOSHA1.jpg\", \"TIMOSHA2.jpg\", \"TIMOSHA3.jpg\"],\n          title: \"Тимоша\",\n          year: 2045,\n          tags: [\"упаковка\", \"еда\"],\n        },\n\n        {\n          images: [\n            \"vmeste1.jpg\",\n            \"vmeste2.jpg\",\n            \"vmeste3.jpg\",\n            \"vmeste4.jpg\",\n            \"vmeste5.jpg\",\n          ],\n          title: \"Вместе\",\n          year: 2018,\n          tags: [\"фирменный стиль\", \"модно\"],\n        },\n      ],\n\n      categories: [\n        \"Упаковка\",\n        \"Фирменный стиль\",\n        \"и\",\n        \"другие\",\n        \"большие\",\n        \"категории\",\n      ],\n      visibleTags: [],\n      checkedProjects: [],\n      projectNames: [],\n      visibleProjects: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],\n\n      filerChosenName: \"\",\n      filterChosenCategories: [],\n      filterChosenTags: [],\n      filterChosenYears: \"\",\n    };\n\n    //this.state.checkedTags = new Array(10).fill(0).map(() => []);\n    this.state.visibleTags = this.state.tags;\n    this.handleCheckTag = this.handleCheckTag.bind(this);\n    this.onChangeProject = this.onChangeProject.bind(this);\n\n    let newExpanded = [];\n    for (let a of this.state.tags) {\n      //we need to expand only 1-level checkboxes\n      newExpanded.push(a.value);\n    }\n\n    this.state.projectNames = this.getProjectNames(this.state.data);\n\n    let newState = this.state;\n    newState.expandedTags = newExpanded;\n    this.setState(newState);\n  }\n\n  recountVisibleProjects() {\n    //TODO!\n  }\n\n  onChangeProject(i) {\n    //console.log(\"project changed! \" + i);\n  }\n\n  getProjectNames(data) {\n    let ans = [];\n    for (let d of data) {\n      ans.push(d.title);\n    }\n    return ans;\n  }\n\n  formSearchFromArray(list) {\n    //console.log(\"list = \" + list);\n    let ans = [];\n    let i = 0;\n    for (let a of list) {\n      ans.push({\n        key: a,\n        value: i,\n        text: a,\n      });\n      ++i;\n    }\n    return ans;\n  }\n\n  handleCheckTag(updatedCheckedTags, targetNode) {\n    //console.log('handleCheckTag(' + newChecked + ')')\n    let newState = this.state;\n\n    //newState.checkedTags[i] = updatedCheckedTags;\n    newState.checkedTags = updatedCheckedTags;\n    this.setState(newState);\n  }\n\n  render() {\n    return (\n      <div>\n        <Header\n          as=\"h1\"\n          content=\"Генератор портфолио\"\n          style={style.h1}\n          textAlign=\"center\"\n        />\n\n        {/* <Grid columns={2} divided>\n    <Grid.Column key={0}>\n    <Tree nodes={this.state.tags.slice(0, 1)} \n                    showNodeIcon={false}\n                    checked={this.state.checkedTags} \n                    handleCheckTag={this.handleCheckTag}\n                    expanded={this.state.expandedTags}\n                  />\n    </Grid.Column>\n    <Grid.Column key={1}>\n    <Tree nodes={this.state.tags.slice(1, 2)} \n                    showNodeIcon={false}\n                    checked={this.state.checkedTags} \n                    handleCheckTag={this.handleCheckTag}\n                    expanded={this.state.expandedTags}\n                  />\n    </Grid.Column>\n  </Grid> */}\n\n        <Container>\n          <Segment.Group>\n            <FilterMenu\n              projectNames={this.state.projectNames}\n              formSearchFromArray={this.formSearchFromArray}\n              categories={this.state.categories}\n              tags={this.state.visibleTags}\n              filerChosenName={this.state.filerChosenName}\n              filterChosenCategories={this.state.filterChosenCategories}\n              filterChosenTags={this.state.filterChosenTags}\n              filterChosenYears={this.state.filterChosenYears}\n            />\n            {/* <Segment>\n              <Grid container columns={4} stackable>\n                <Grid.Column>\n                  <Segment basic>{<Button>Применить фильтры</Button>}</Segment>\n                </Grid.Column>\n                <Grid.Column>\n                  <Segment basic></Segment>\n                </Grid.Column>\n              </Grid>\n            </Segment> */}\n\n            <Segment>\n              {/* <Header as=\"h3\" content=\"проекты\" /> */}\n              <CardsCollection\n                data={this.state.data}\n                img_add_prefix={this.img_add_prefix}\n                onChangeProject={this.onChangeProject}\n                visibleProjects={this.state.visibleProjects}\n              />\n            </Segment>\n          </Segment.Group>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'semantic-ui/dist/semantic.min.css';\nimport 'react-checkbox-tree/lib/react-checkbox-tree.css'\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}